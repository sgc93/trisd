/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/jebena.glb 
*/

import { useGLTF, useTexture } from "@react-three/drei";
import { textures } from "../../config/constants";

export function Model({ newTexture, props }) {
	const clay = useTexture(textures[0].texture);
	const golden = useTexture(textures[1].texture);
	const metalic = useTexture(textures[2].texture);
	const mosaic = useTexture(textures[3].texture);
	const terrazzo = useTexture(textures[4].texture);
	let texture = metalic;
	if (newTexture === "golden") {
		texture = golden;
	} else if (newTexture === "metalic") {
		texture = metalic;
	} else if (newTexture === "clay") {
		texture = clay;
	} else if (newTexture === "mosaic") {
		texture = mosaic;
	} else if (newTexture === "terrazzo") {
		texture = terrazzo;
	}

	const { nodes, materials } = useGLTF("/jebena.glb");
	return (
		<group {...props}>
			<mesh
				geometry={nodes.j_chair.geometry}
				material={materials.chair_material}
				position={[0, 0.035, 0]}
				rotation={[Math.PI, -1.521, Math.PI]}
				scale={0.605}
			>
				{texture && <meshStandardMaterial {...texture} />}
			</mesh>
			<mesh
				geometry={nodes.j_kdan.geometry}
				material={materials.kdan_material}
				position={[-0.563, 3.335, -0.006]}
				rotation={[1.702, -1.206, 1.712]}
				scale={0.207}
			>
				{texture && <meshStandardMaterial {...texture} />}
			</mesh>
			<mesh
				geometry={nodes.jebena.geometry}
				material={materials.jebena_material}
				position={[-0.989, 1.353, -0.005]}
				rotation={[1.583, -0.239, 1.622]}
				scale={-0.131}
			>
				{texture && <meshStandardMaterial {...texture} />}
			</mesh>
		</group>
	);
}

useGLTF.preload("/jebena.glb");
